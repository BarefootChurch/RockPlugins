<style>
.readmore_dates {
   transition: height 100ms;
   overflow: hidden;
   display: none;
}
.isotope_item {
    z-index: 1;
}
</style>

<div class="container g-padding-t-150--xs g-padding-b-50--xs">
    <div class="row">
        <div class="col-xs-12 col-sm-12 col-md-8 col-md-offset-2" >
            <h3 class="g-font-weight--600">Find a Group</h3>
            <p class="g-font-weight--400 g-line-height--sm">Find a group that interests you by selecting a location, date and/or ministry. Click on the image to see more details or to register.</p>
            <div class="g-display-block--xs">

                <div class="g-display-inline-block--xs">
                    <select class="select2-campuses g-width-400--xs" name="campus">
                        <option value="allCampuses" data-shortcode="SE" data-campus="" {% if selectedCampus == null %} selected="selected"{% endif %}>All Locations</option>
                        {% for campus in Campuses %}
                            {% assign publicCampus = campus | Attribute:'Public' %}
                            {% if publicCampus == 'Yes' %}
                                <option value="{{ campus.Id }}" data-shortcode="{{ campus.ShortCode }}" data-campus="{{ campus.Name | Downcase | Replace:" ",""}}"{% if selectedCampus.Id > 0 and selectedCampus.Id == campus.Id %} selected="selected"{% endif %}>
                                    {{ campus.Name }}
                                </option>
                            {% endif %}
                        {% endfor %}
                    </select>
                </div>

                <style>
                .se-dropdown {
                    border: 2px solid black;
                    cursor: pointer;
                    padding: 5px 70px 5px 15px;
                    display: block;
                    white-space: nowrap;
                    text-overflow: ellipsis;
                    overflow: hidden;
                    color: black;
                    line-height: 28px;
                    text-transform: uppercase;
                    font-weight: 600;
                    box-sizing: border-box;
                    display: inline-block;
                    margin: 0;
                    position: relative;
                    vertical-align: middle;
                    margin-bottom: 10px;
                    min-width: 170px;
                    top: 7px;
                }
                .se-dropdown .arrow {
                    height: auto;
                    position: absolute;
                    top: 19px;
                    right: 15px;
                    width: 20px;
                }
                .se-dropdown .arrow b {
                    border-color: white;
                    border-style: none;
                    border-width: 0px;
                    height: 0;
                    position: absolute;
                    width: 0;
                }
                .se-dropdown .arrow b:before {
                    width: 10px;
                    height: 10px;
                    content: "";
                    border: solid #000000;
                    border-width: 0 2px 2px 0;
                    display: inline-block;
                    position: absolute;
                    top: 55%;
                    left: 50%;
                    transition: all 0.4s ease;
                    transform: translate(-50%, -50%) rotate(45deg);
                    -webkit-transform: translate(-50%, -50%) rotate(45deg);
                }
                .se-dropdown[aria-expanded="true"] .arrow b:before {
                    transform: translate(-50%, -50%) rotate(-135deg);
                    -webkit-transform: translate(-50%, -50%) rotate(-135deg);
                    top: 3px;
                }
                </style>
                <div class="g-display-inline-block--xs">
                    <span class="se-dropdown" data-toggle="dropdown-content" data-reveal="daysOfTheWeek" aria-expanded="false">
                        Meets On
                        <span class="arrow" role="presentation"><b role="presentation"></b></span>
                    </span>
                    <div id="daysOfTheWeek" class="button-group filter-button-group g-padding-x-10--xs g-display-inline-block--xs g-margin-t-10--xs"
                    style="
                        box-shadow:0px 0px 5px 1px rgba(0, 0, 0, 0.15);
                        padding: 15px;
                        display: none;
                        position: absolute;
                        background-color: #FFFFFF;
                        overflow: visible;
                        box-sizing: border-box;
                        z-index: 1051;
                    "
                    >
                        <p>Select a day of the week:</p>
                        <a class="button se-btn se-btn--tag uppercase no-transitions" data-filter="Sunday" data-toggle="tooltip" data-placement="bottom" title="Sunday">S</a>
                        <a class="button se-btn se-btn--tag uppercase no-transitions" data-filter="Monday" data-toggle="tooltip" data-placement="bottom" title="Monday">M</a>
                        <a class="button se-btn se-btn--tag uppercase no-transitions" data-filter="Tuesday" data-toggle="tooltip" data-placement="bottom" title="Tuesday">T</a>
                        <a class="button se-btn se-btn--tag uppercase no-transitions" data-filter="Wednesday" data-toggle="tooltip" data-placement="bottom" title="Wednesday">W</a>
                        <a class="button se-btn se-btn--tag uppercase no-transitions" data-filter="Thursday" data-toggle="tooltip" data-placement="bottom" title="Thursday">T</a>
                        <a class="button se-btn se-btn--tag uppercase no-transitions" data-filter="Friday" data-toggle="tooltip" data-placement="bottom" title="Friday">F</a>
                        <a class="button se-btn se-btn--tag uppercase no-transitions" data-filter="Saturday" data-toggle="tooltip" data-placement="bottom" title="Sunday">S</a>
                    </div>
                </div>

                <div class="g-display-inline-block--xs">
                    <span class="se-dropdown" data-toggle="dropdown-content" data-reveal="categorySelected" aria-expanded="false">
                        Type
                        <span class="arrow" role="presentation"><b role="presentation"></b></span>
                    </span>
                    <div id="categorySelected" class="button-group filter-button-group g-padding-x-10--xs g-display-inline-block--xs g-margin-t-10--xs"
                    style="
                        box-shadow:0px 0px 5px 1px rgba(0, 0, 0, 0.15);
                        padding: 15px;
                        display: none;
                        position: absolute;
                        background-color: #FFFFFF;
                        overflow: visible;
                        box-sizing: border-box;
                        z-index: 1051;
                    ">
                      <p>Select categories of your interests:</p>
                      {% definedvalue where:'DefinedTypeId==52' %}
                          {% assign definedvalueItemsSorted = definedvalueItems | Sort: 'Order' %}
                          {% for definedValue in definedvalueItemsSorted %}
                              {% if definedValue != '' %}
                                  <a class="button se-btn se-btn--tag no-transitions uppercase g-margin-y-5--xs g-margin-x-5--xs" data-category="{{ definedValue.Id }}">{{ definedValue.Value | Capitalize }}</a>
                            {% endif %}
                          {% endfor %}
                      {% enddefinedvalue %}
                    </div>
                </div>

            </div>

        </div>
    </div>
</div>


<div class="container g-padding-y-50--xs">
    <div class="isotope_wrap g-margin-b-80--xs">
        {% for group in Groups %}
            {% if group.IsActive and group.IsPublic %}

                {% assign groupUrl = group.Campus | Attribute:'Slug' %}
                {% assign groupLocations = group.GroupLocations %}
                {% assign otc = group | Attribute: 'OpentoChildren' %}
                {% assign handicapAcc = group | Attribute: 'HandicappedAccessible' %}
                {% assign neightborhoodName = group | Attribute: 'NeighborhoodName' %}
                {% assign groupTypes = group | Attribute: 'SmallGroupTopic' %}

                <div class="isotope_item col-xs-12 col-md-6 col-lg-4 event-calendar" data-campus="{{ group.Campus.Slug }}" data-day="{{ group.Schedule.WeeklyDayOfWeek }}" data-handicap-accessible="{{ handicapAcc | Downcase }}" data-open-to-children="{{ otc | Downcase }}" data-type="{{ groupTypes | Downcase }}">
                    <div class="clearfix card g-margin-b-20--xs" >

                        <div class="caption g-margin-b-40--xs g-padding-x-60--xs g-padding-t-60--xs">
                            <h6 class="uppercase g-padding-b-5--xs g-font-weight--700">{{ group.Campus.Name }}</h6>
                            <h5 class="g-font-family--secondary" style="margin-bottom: 5px;">{{ group.Name }}</h5>
                            {% if group.Description != '' %}
                            <div class="readmore_dates">
                                {{group.Description}}
                                <br />
                            </div>
                            {% endif %}
                        </div>


                        <div class="g-margin-b-20--xs" style="display: inline-block; width: 100%;">

                            <div class="event-items col-xs-4 g-padding-x-10--xs g-ver-divider__solid__r--gray-lighter {% if otc != 'Yes' %}col-xs-offset-2{% endif %}">
                                <div class="event-icon --calendar"><!-- Calendar SVG Image --></div>
                                <div>
                                    <ul class="list-unstyled" style="margin: 0;">
                                        <li style="vertical-align: middle;">
                                            <h6>{{ group.Schedule.WeeklyDayOfWeek }}<br />
                                                {{  group.Schedule.WeeklyTimeOfDay | Date:'@ h:mm tt' }}</h6>
                                        </li>
                                    </ul>
                                </div>
                            </div>

                            {%- assign meetingType = '' -%}
                            {%- assign meetingLocations = 0 -%}
                            {%- assign groupZipCode = ''-%}
                            {%- for groupLocation in groupLocations -%}
                                {%- case groupLocation.GroupLocationTypeValueId -%}
                                    {%- when '209' -%}
                                    {% comment %} 209 == Meeting Location {% endcomment %}
                                        {% assign groupZipCode = groupLocation.Location.PostalCode %}
                                        {% assign meetingLocations = meetingLocations | Plus:1 %}
                                        {% assign meetingType = groupLocation.GroupLocationTypeValueId %}
                                    {%- when '19' and meetingType == '' -%}
                                    {% comment %} 19 == Home {% endcomment %}
                                        {% assign groupZipCode = groupLocation.Location.PostalCode %}
                                        {% assign meetingLocations = meetingLocations | Plus:1 %}
                                        {% assign meetingType = groupLocation.GroupLocationTypeValueId %}
                                    {%- when null and meetingType == '' -%}
                                    {% comment %} undefined {% endcomment %}
                                        {% assign groupZipCode = groupLocation.Location.PostalCode %}
                                        {% assign meetingLocations = meetingLocations | Plus:1 %}
                                        {% assign meetingType = groupLocation.GroupLocationTypeValueId %}
                                    {%- else -%}
                                        {% comment %} skipping any other group types
                                        since we don't know what they are, or it's
                                        a geographic area {% endcomment %}
                                {%- endcase -%}
                            {%- endfor -%}

                            <div class="event-items col-xs-4 g-padding-x-10--xs {% if otc == 'Yes' %}g-ver-divider__solid__r--gray-lighter{% endif %}" style="overflow:visible;">
                                 <div class="event-icon --location" {% if handicapAcc == 'Yes'%}style="left:-12px;"{% endif%}>
                                    {% if meetingLocations > 1 %}
                                    <span style="
                                        background-color: black;
                                        border-radius: 100%;
                                        width: 15px;
                                        height: 15px;
                                        display: block;
                                        position: absolute;
                                        top: 0;
                                        right: 4px;
                                        color: white;
                                        font-weight: 800;
                                        font-size: 1rem;
                                    ">{{ meetingLocations }}</span>
                                    {% endif%}

                                    {% if handicapAcc == 'Yes'%}
                                    <span style="
                                        border-radius: 20px;
                                        width: 24px;
                                        height: 24px;
                                        display: block;
                                        position: absolute;
                                        bottom: 4px;
                                        right: -20px;
                                        color: #FFFFFF;
                                        font-weight: 800;
                                        font-size: 1.2rem;
                                        vertical-align: middle;
                                        padding-top: 3px;
                                        background-color: #000000;
                                    " data-toggle="tooltip" data-placement="right" title="Handicap Accessible">
                                    <i class="fas fa-wheelchair"></i>
                                    </span>
                                    {% endif%}
                                 </div>

                                <h6>
                                    {% if meetingLocations > 1 %}
                                         This group has multiple locations. Contact for more information.
                                    {% elseif meetingLocations == 1 %}
                                        {% if neightborhoodName != 'none'%}{{ neightborhoodName }}<br />{% endif %}
                                        {% if groupZipCode != ''%}{{ groupZipCode | Truncate:5,'' }}{% endif%}
                                    {% else %}
                                        A location has not been definted yet. Contact for more information.
                                    {% endif %}
                                </h6>
                            </div>

                            <!-- otc -->
                            {% if otc == 'Yes' %}
                            <div class="event-items col-xs-4 g-padding-x-10--xs">
                                <div class="event-icon --teddy-bear"><!-- Teddy Bear SVG Image --></div>
                                <h6>Open to<br> Children</h6>
                            </div>
                            {% endif %}

                        </div>



                    </div>
                </div>

            {% endif %}
        {%endfor%}
    </div>
</div>

<script src="https://cdnjs.cloudflare.com/ajax/libs/Readmore.js/2.2.0/readmore.min.js"></script>
<script>

    $('[data-toggle="tooltip"]').tooltip();

    /* When the user clicks on the button,
    toggle between hiding and showing the dropdown content */
    $('[data-toggle="dropdown-content"]').click(function(e) {
        e.preventDefault();
        var $this = $( this );
        var toggleId = $this.attr('data-reveal');
        $this.attr('aria-expanded', function (i, attr) {
            return attr == 'true' ? 'false' : 'true'
        });
        var $toggleContentDiv = $('#'+toggleId);
        $toggleContentDiv.toggle();
    });

    // Initialize Isotope/Groups
    var $grid = $('.isotope_wrap').isotope({
      itemSelector: '.isotope_item',
      percentPosition: true,
      layoutMode: 'fitRows'
    });
    if (Modernizr.mq('only all and (max-width: 720px)')) {
        // Not using isotope or readmore on mobile - it's heavy on JS (breaks old iphones)
        $('.isotope_wrap').addClass('is-showing-items');
    } else {
        var isoOptions = {
            itemSelector: '.isotope_item',
            percentPosition: true,
            layoutMode: 'fitRows'
        };
        // initialize ReadmoreJS
        $('.readmore_dates').readmore({
            speed: 200,
            lessLink: '<a class="pull-right uppercase" style="padding: 2rem;width: 100%;text-align: right;"><span class="se-carat se-carat--up"></span></a>',
            moreLink: '<a class="pull-right" style="display: inline-block;padding: 2rem;position: relative;height: 7rem;width: 100%;margin-top: -6rem;"><span class="pull-right se-carat se-carat--down" style="margin-top: 2rem;"></span></a>',
            embedCSS: false,
            collapsedHeight: 0,
            beforeToggle: function(tr, el, ex) {
                $(el).show();
            },
            afterToggle: function(trigger, element, expanded) {
                $('.isotope_wrap').isotope(isoOptions); // re-initialize
            }
        });
        // init Isotope
        $grid.addClass('is-showing-items').isotope(isoOptions);
    }

    // bind to buttons related to the day of the week
    $daysOfTheWeek = $('#daysOfTheWeek').on( 'click', '.button', function(e) {
      e.preventDefault();

      var $this = $( this );
      var filterValue = $this.attr('data-filter');
      $this.toggleClass('active');
      buildDaysFilters(filterValue);
      runFilters();
    });

    // bind to campus dropdown selection
    var campusSelected = '';
    $('.select2-campuses').select2({
      placeholder: 'All Locations'
    });
    $('.select2-campuses').on('select2:select', function (e) {
        e.preventDefault();
        var data = e.params.data;
        campusSelected = $(data.element).data('campus');
        buildCampusFilters(campusSelected);
        runFilters();
    });

    // bind to buttons related to the day of the week
    $categorySelected = $('#categorySelected').on( 'click', '.button', function(e) {
      e.preventDefault();

      var $this = $( this );
      var filterValue = $this.attr('data-category');
      $this.toggleClass('active');
      buildTypeFilters(filterValue);
      runFilters();
    });

    // handling types selected
    var types_selected = [];
    function buildDaysFilters(type) {
        if (~types_selected.indexOf(type)) {
            // remove from array (toggling)
            types_selected.splice($.inArray(type, types_selected),1);
        } else {
            // add to array
            if (type != '' && type != undefined) {
                types_selected.push(type);
            }
        }
        console.log(types_selected);
     }

    // handling campuses selected
    var campus_filters_selected = [];
    function buildCampusFilters(campus) {
        // reset campus array, campuses are only selected one at a time
        campus_filters_selected = [];
        // add to array
        if (campus != '' && campus != undefined) {
            campus_filters_selected.push(campus);
        }
        console.log(campus_filters_selected);
    }

    // handling days selected
    var days_selected = [];
    function buildDaysFilters(day) {
        if (~days_selected.indexOf(day)) {
            // remove from array (toggling)
            days_selected.splice($.inArray(day, days_selected),1);
        } else {
            // add to array
            if (day != '' && day != undefined) {
                days_selected.push(day);
            }
        }
        console.log(days_selected);
     }

     function runFilters() {
         var filterSelectors = 'div';

         // if week days are selected
         if (days_selected.length != 0) {
             filterSelectors += filterStringify(days_selected, 'day');
             filterSelectors += ',';
         }

         // if week days are selected
         if (types_selected.length != 0) {
             filterSelectors += filterStringify(types_selected, 'type');
             filterSelectors += ',';
         }

         if (filterSelectors == 'div') {
             // add only campus if there's nothing else selected
             if (campus_filters_selected.length != 0) {
                 filterSelectors += filterStringify(campus_filters_selected, 'campus');
                 filterSelectors += ',';
             }
         }

         // remove the very last comma.
         var lastChar = filterSelectors.slice(-1);
         if(lastChar == ',') {
           filterSelectors = filterSelectors.slice(0, -1);
         }

         console.log('filters: '+filterSelectors);

         $grid.isotope({
           itemSelector: '.isotope_item',
           percentPosition: true,
           layoutMode: 'fitRows',
           filter: filterSelectors
         });
     }

     function filterStringify(arrayList, selector) {
         varstr = '';
         if (arrayList.length != 0) {
             // make string of selectors
             var loopIndex = 1
             arrayList.forEach(function(item, index, array) {

                 // show campus groups with filters if campus is selected - otherwise just fitler items(s)
                 if (campus_filters_selected.length != 0 && selector != 'campus') {
                     varstr += '[data-campus*="'+campus_filters_selected[0]+'"]'
                 }

                 if (item != '' && item != undefined) {
                     varstr += '[data-'+selector+'*="'+item+'"]'
                 }
                 // no comma on the first, and no comma on the last
                 if (arrayList.length > 1 && loopIndex != arrayList.length) {
                     varstr += ','
                 }
                 loopIndex++;
             });
         }
         return varstr;
     }
</script>
