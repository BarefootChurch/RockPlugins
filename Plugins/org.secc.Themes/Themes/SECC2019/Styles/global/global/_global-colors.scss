/*----------------------------------
  Colors
------------------------------------*/

$utils-colors: (
	primary:              	(color: $WhiteColor),
	red:                  	(color: $ErrorColor),
	dark-red:               (color: #8c0000),
	gold:                 	(color: #b99769),
	body:             		(color: $WhiteColor),
	dark:                 	(color: #222324),
	dark-light:           	(color: #242526),
	heading:              	(color: #242424),
	white:                	(color: $WhiteColor),
	text:            		(color: $CopyColor),
	gray-light:           	(color: $LightGreyColor),
	gray-lighter:         	(color: rgba($LightGreyColor, 0.8)),
	black: 					(color: $BlackColor),
	black-opacity:        	(color: rgba($BlackColor,.8)),
	black-opacity-light:  	(color: rgba($BlackColor,.5)),
	black-opacity-lighter:	(color: rgba($BlackColor,.3)),
	black-opacity-lightest:	(color: rgba($BlackColor,.1)),
	white-opacity:        	(color: rgba($WhiteColor,.8)),
	white-opacity-light:  	(color: rgba($WhiteColor,.5)),
	white-opacity-lighter:	(color: rgba($WhiteColor,.3)),
	white-opacity-lightest:	(color: rgba($WhiteColor,.1)),
);

//Some alternate colors used for Nav Items, highlights, and callouts
/* Text Colors */
@each $color-name, $color in $utils-colors {
	.g-color--#{$color-name} {
  	color: map-get($color, color) !important;
  }
}

/* Text Shadow Colors */
@each $color-name, $color in $utils-colors {
	.g-text-shadow--#{$color-name} {
  	text-shadow: -1px 1px 1px map-get($color, color) !important;
  }
}

/* Hover Colors */
.g-color--text[href] {
	@include hover {
		color: $color-primary !important;
	}
}

.g-color--white-opacity[href] {
	@include hover {
		color: $color-primary  v
	}
}

/*----------------------------------
  Divider
------------------------------------*/
@each $color-name, $color in $utils-colors {
	.g-hor-divider__solid__b--#{$color-name} {
	  border-bottom: .0625rem solid map-get($color, color);
	}
}
@each $color-name, $color in $utils-colors {
	.g-hor-divider__solid__t--#{$color-name} {
	  border-top: .0625rem solid map-get($color, color);
	}
}
@each $color-name, $color in $utils-colors {
	.g-ver-divider__solid__r--#{$color-name} {
	  border-right: .0625rem solid map-get($color, color);
	}
}
@each $color-name, $color in $utils-colors {
	.g-ver-divider__solid__l--#{$color-name} {
	  border-left: .0625rem solid map-get($color, color);
	}
}

/*----------------------------------
  Background
------------------------------------*/

@each $color-name, $color in $utils-colors {
	.g-bg-color--#{$color-name} {
	  background-color: map-get($color, color);
	}
}

/************************************************************************************************/
/* Parallax Background Color using all colors from above (use this only if you need all colors) */
/************************************************************************************************/
// @each $color-name, $color in $utils-colors {
// 	@for $i from 1 through 10 {
// 	  .g-bg-parallax-color--#{$color-name}--#{$i * 10} {
// 		@include gradient-horizontal-after(
// 			$direction: 145deg,
// 			$start-color: rgba(map-get($color, color),($i * 10 / 100)),
// 			$end-color: rgba(map-get($color, color),($i * 10 / 100)),
// 			$start-percent: 100%
// 		);
// 	  }
// 	}
// }

/* Parallax Background Color with only the black color */
@for $i from 1 through 10 {
  .g-bg-parallax-color--black--#{$i * 10} {
	@include gradient-horizontal-after(
		$direction: 145deg,
		$start-color: rgba($BlackColor, ($i * 10 / 100)),
		$end-color: rgba($BlackColor, ($i * 10 / 100)),
		$start-percent: 100%
	);
  }
}
