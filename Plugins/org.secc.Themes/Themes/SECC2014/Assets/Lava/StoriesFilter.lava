{% comment %}
    ******* Filtering System for Stories *****
{% endcomment %}

<div id="Intro" class="container">
    <div class="row" style="padding-top: 2em;">
        <div class="col-lg-8 col-md-8 col-md-offset-2 clearfix">
            <div class="col-xs-12 text-center">
                <h3 style="font-weight: 500;">
                    SEE <strong>ALL</strong> STORIES BELOW<br />
                    <small>OR SELECT A CATEGORY</small>
                </h3>
            </div>
            <br />
            <div class="filterbox">
                <div class="row">
                    <div class="col-xs-12 col-sm-8 col-sm-offset-2 col-md-6 col-md-offset-3" >
                        <select class="select2-stories" name="stories">
                        <option value="allStories">All Stories</option>

                        {% contentchannelitem where:'Status == 1 && ContentChannelId == 35' sort:'StartDateTime desc' %}
                        {% for item in contentchannelitemItems %}
                                {% taggeditem where:'EntityGuid == "{{item.Guid}}"' %}
                                {% for taggedItem in taggeditemItems %}
                                        <option value="{{ taggedItem.Tag.Name }}" data-tag="{{ taggedItem.Tag.Name | Downcase }}">{{ taggedItem.Tag.Name }}</option>
                                {% endfor %}
                                {% endtaggeditem %}
                        {% endfor %}
                        {% endcontentchannelitem %}

						{% comment %} {% contentchannelitem where:'Status == 1 && ContentChannelId == 35' sort:'StartDateTime desc' %}
						   {% for item in contentchannelitemItems %}
								<option value="{{ item.Categories }}">{{ item.Categories }}</option>
						   {% endfor %}
						{% endcontentchannelitem %} {% endcomment %}

                        </select>
                    </div>
                </div>

            </div>

        </div>
    </div>
</div>

<style>
.hide {
    display: none;
}
</style>

<script>
$(document).ready(function() {

    //loadQueryStringParam();

    ///////////////////////////////////////////////////
    /////////////// Initialize Select2 ////////////////
    ///////////////////////////////////////////////////
    function format(state) {
        var originalOption = state.element;
        return "<h4><span class=\"se-logo\">" + $(originalOption).data('shortcode') + "</span></h4> " + state.text;
    }
    $('.select2-stories').select2({
      placeholder: 'Select a Story Category'
    });
    $('.select2-stories').on('select2:select', function (e) {
        // prevent from submiting default form action
        e.preventDefault();
        // pull in lava ID
        var data = e.params.data;
        runTagsFilter(data);
    });

    // Initialize Isotope
    var $grid = $('.isotope_wrap').isotope({
        // options
        percentPosition: true,
        itemSelector: '.isotope_item',
        layoutMode: 'fitRows',
        hiddenStyle: {
            opacity: 0
        },
        visibleStyle: {
            opacity: 1
        }
    });
    // reveal all items after init
    var $items = $grid.find('.isotope_item');
    $grid.addClass('is-showing-items')
    .isotope( 'revealItemElements', $items );
    
    // re-init jarallax
    //jarallax(document.querySelectorAll('.jarallax'), {
    //    disableParallax: /iPad|iPhone|iPod|Android/,
    //    disableVideo: /iPad|iPhone|iPod|Android/
    //});
});


///////////////////////////////////////////////////
////////////// Run Tag Selection ///////////////
///////////////////////////////////////////////////
function runTagsFilter(tag_selected) {
    console.log('Made it to filtering function!');
    // grab id to filter results
    var pnlContent = $('#story-results').find("div[id*='_upnlContent']");
    var pnlContent_ID = pnlContent.attr("id");
    pnlContent.slideUp();
    // $grid.isotope('destroy');

    // push a new URL state with filter parameter
    var newPath = updatePath('story',$(tag_selected.element).data('tag'));

    // update form action url
    $('#form1').attr('action', newPath);

    // do AJAX postback through .NET
    //processPageLoad(pnlContent_ID, '');

    console.log('TAG:'+tag_selected);
}

function updatePath(key, value) {
    baseUrl = [location.protocol, '//', location.host].join('');
	parts = location.pathname.split('/');
	// Set some defaults;
	parts[2] = parts[2]||'all';
	if (key == 'story') {
		parts[2] = value||'all';
	}
    window.history.pushState({}, '', baseUrl + parts.join('/'));
	console.log(key);
	console.log(value);
	console.log(parts);
    return parts.join('/');
}


function processPageLoad(pnlContent_ID, params) {
    // do AJAX postback through .NET
    setTimeout(function () {
		__doPostBack(pnlContent_ID, '');
	}, 1);
    ///////////////////////////////////////////////////
    ////////////// Process Post Back //////////////////
    ///////////////////////////////////////////////////
    var prm = Sys.WebForms.PageRequestManager.getInstance();
    //Raised before processing of an asynchronous postback starts and the postback request is sent to the server.
    prm.add_beginRequest(BeginRequestHandler);
    // Raised after an asynchronous postback is finished and control has been returned to the browser.
    prm.add_endRequest(pageLoad);
    // Listen for PostBack
    function pageLoad() {
        var pnlContent = $('#event-results').find("div[id*='_upnlContent']");
        var pnlContent_ID = pnlContent.attr("id");
        // Once loaded, fire the Javascript function from the list
        InitLoadedRequest(); // an Ajax pageLoad method that will call your jquery method
        pnlContent.slideDown(400, function() {});
        // $('html, body').animate({scrollTop: ($('#filter_selected').offset().top)}, 400);
        // $('html, body').scrollspy({ target: '#filter_selected' });

        var scroll = new SmoothScroll();
        var anchor = document.querySelector( '#filter_selected' );
        scroll.animateScroll( anchor );

    }
    // Run JS while waiting on PostBack
    function BeginRequestHandler(sender, args) {
        // hide current state
        // hide Blocks that aren't needed when filtered
        $('.hide-on-filter').slideUp();
        // destropy any previous iso before postback
        // $('.isotope_wrap').isotope('destroy');
    }
}

</script>
