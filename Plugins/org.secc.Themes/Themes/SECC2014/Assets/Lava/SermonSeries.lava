<style>
	#loading-animation {
		display: none;
	}
	.current-series {
		height: 220px;
		background-size: cover;
		background-position: center center;
		background-repeat: no-repeat;
	}

	@media (min-width: 992px) {
		.current-series {
			height: 420px;
		}
	}

	.current-series h1 {
		background-color: rgba(0, 0, 0, 0.3);
		text-align: center;
		font-size: 16px;
		font-weight: 600;
		color: #fff;
		margin: 0;
		padding: 6px;
	}

	.series {
		border: 1px solid rgba(0, 0, 0, .3);
		position: relative;
	}

	.series h1 {
		font-size: 20px;
		font-weight: 600;
		margin-top: 4px;
		margin-bottom: 0;
	}

	.series-dates, .sermons-count {
		opacity: .6;
	}

	.series-body {
		padding: 15px;
		/* height: 172px; */
	}
	.series-body h3 {
		font-weight: 300;
	}
	.series-body hr {
		margin: 10px 0px;
	}

	.series-summary {
		/* height: 60px; */
		/* overflow: hidden; */
	}

	.series-link {
		color: black;
	}

	.series-link:hover {
		text-decoration: none;
	}

	/* .series-image {
		height: 158px;
		width: 100%;
		background-size: cover;
		background-position: center center;
		background-repeat: no-repeat;
	} */

	/* .series-image:after {
		content: '';
		position: absolute;
		top: 0;
		left: 0;
		right: 0;
		bottom: 0;
		transition: all .1s ease-in-out;
	} */

	/* .series-image:hover:after {
		background: rgba(0,0,0,.2);
	} */
</style>

{% assign currentSeries = Items | First %}
{% assign currentSeriesImageGuid = currentSeries | Attribute:'Image','RawValue' %}

{% comment %}
{% if Pagination.CurrentPage == 1 %}
<a href="{{ LinkedPages.DetailPage }}?Item={{ currentSeries.Id }}">
  <header class="current-series" style="background-image: url('/GetImage.ashx?Guid={{ currentSeriesImageGuid }}')">
	  <h1>Current Series</h1>
  </header>
</a>
{% endif %}
{% endcomment %}

<div class="container-fluid" style="background-color:  rgba(239, 239, 239, 0.5); padding: 20px 0;">

	<div class="container">
		<div class="isotope_wrap margin-t-lg series-list">

			{% for item in Items -%}
			{% assign seriesImage = item | Attribute:'Image' -%}
			{% assign seriesImageGuid = item | Attribute:'Image','RawValue' -%}
			<div class="isotope_item col-lg-4 col-md-6 col-sm-6 margin-b-md event-calendar hide-on-load">
				{% comment %}
				{{ LinkedPages.DetailPage }}?Item={{ item.Id }}
				{{ 'Global' | Page:'Path' }}/{{ item.Slug }}
				{% endcomment %}
				<a class="series-link" href="{{ 'Global' | Page:'Path' }}/{{ item.Slug }}">
					<div class="card" style="background-color: white;">
						{% if seriesImage != empty -%}
							<!-- Image -->
							<div class="img-hover">
								<img src="/GetImage.ashx?Guid={{ seriesImageGuid }}" class="img-responsive img-rounded" style="margin: 0 auto">
							</div>
						{% else -%}

							<!-- Grab Sermon Image -->
							{% for child in item.ChildItems -%}
								{% assign seriesImage = child.ChildContentChannelItem | Attribute:'Image' -%}
								{% assign seriesImageGuid = child.ChildContentChannelItem | Attribute:'Image','RawValue' -%}
								{% if seriesImage != empty -%}
									<!-- Image -->
									<div class="img-hover">
										<img src="/GetImage.ashx?Guid={{ seriesImageGuid }}" class="img-responsive img-rounded" style="margin: 0 auto">
									</div>
									{% break -%}
								{% endif %}
							{% endfor -%}

						{% endif -%}
						<div class="series-body">
							<h3 class="text-color">{{ item.Title }}</h3>
							<hr />
							{% if item.Content != empty -%}
							<p class="series-summary text-color">
								{{ item.Content }}
							</p>
							<hr />
							{% endif -%}
							<p class="series-dates text-color text-right">
								{% assign lastSermon = item.ChildItems | Last %}
								{% assign sermonsCount = item.ChildItems | Size %}
								{% if sermonsCount > 1 -%}
								{{ item.StartDateTime | Date:'MMMM dd, yyyy' }} - {{ lastSermon.ChildContentChannelItem.StartDateTime | Date:'MMMM dd, yyyy' }}
								{% else -%}
								{{ item.StartDateTime | Date:'MMMM dd, yyyy' }}
								{% endif -%}<br />
								Sermons: {{ sermonsCount }}
							</p>
						</div>
					</div>
				</a>
			</div>
			{% endfor -%}

		</div>

		<div class="text-center">
			<!-- <a class="btn btn-doors" href="javascript:void(0)" id="loadSermons" onclick="getMoreSermons(jQuery);">
  		    	Show More Series <i class="fa fa-chevron-down"></i>
  		  	</a> -->
			<img id="loading-animation" src="http://kyleidleman.com/wp-content/themes/kyleidleman/_/img/loading.gif" />
		</div>

		{% comment %}
		{% if Pagination.TotalPages > 1 %}
		<div class="margin-t-lg">
		  {% assign nextPageString = Pagination.NextPage | ToString %}
		  {% assign prevPageString = Pagination.PreviousPage | ToString %}

		  {% if {{Pagination.PreviousPage == -1 }} %}

		  {% else %}
		  <a class="btn btn-doors pull-left" href="{{Pagination.UrlTemplate | Replace:'PageNum', prevPageString}}">
		    <i class="fa fa-chevron-left"></i>  Prev
		  </a>
		  {% endif %}

		  {% if {{Pagination.NextPage == -1 }} %}

		  {% else %}
		  <a class="btn btn-doors pull-right" href="{{Pagination.UrlTemplate | Replace:'PageNum', nextPageString}}">
		    See More <i class="fa fa-chevron-right"></i>
		  </a>
		  {% endif %}
		</div>
		{% endif %}
		{% endcomment %}
	</div>

<br />
<br />
</div>

<script>

window.onscroll = function() {
    var pageHeight=document.documentElement.offsetHeight,
    windowHeight=window.innerHeight,
    scrollPosition=window.scrollY || window.pageYOffset || document.body.scrollTop + (document.documentElement && document.documentElement.scrollTop || 0);

    if (pageHeight - document.getElementById("SiteFooter").offsetHeight <= windowHeight+scrollPosition) {
        getMoreSermons(jQuery);
		console.log('Boom!');
    }
};

// Set sermon series to start at the next set since the first set is already loaded.
var sermonOffset = 2;
// This dertimines whether the API requests should continue or stop.
var sermonsContinueMakingRequests = true;
// This determines whether an ajax request is already in the process or not.
var sermonsLoading = false;

function getMoreSermons($) {

	if (sermonsContinueMakingRequests == true) {
		console.log('sermonsContinueMakingRequests === '+sermonsContinueMakingRequests);
		$("#loading-animation").show();
	}

	// check and see if another request is being loaded
	if (sermonsLoading == false) {
		$.ajax( {
			url: 'https://rock.secc.org/Webhooks/Lava.ashx/sermons/'+sermonOffset,
			async: true,
			beforeSend: function(data) {
				sermonsLoading = true; // start ajax loading process
			},
			success: function(data) {
				// console.log(data.Series);

				$.each(data.Series, function(i, sermon_series){
					  // console.log( v);

					  var $grid = $('.isotope_wrap').isotope({
				          // options
				          percentPosition: true,
				          itemSelector: '.isotope_item',
				          layoutMode: 'fitRows'
				      });

					  var sermonsInSeries = sermon_series.Sermons.length;
					  console.log('sermonsInSeries: '+ sermonsInSeries);
					  var $elem = $('<div></div>', {
						            "class": "isotope_item col-lg-4 col-md-6 col-sm-6 margin-b-md event-calendar hide-on-load"
						          }).append(
						            $('<a/>', {
						              "class": 'series-link',
									  "href": window.location + '/' + sermon_series.Slug,
						            }).append(
						  	            $('<div/>', {
						  	              "class": 'card',
										  "style": 'background-color: white;',
						  	            }).html(function() {
					      				  var box =  "<div class=\"img-hover\">";
						  	                  box +=    "<img src=\""+ sermon_series.Image +"\" class=\"img-responsive img-rounded\" style=\"margin: 0 auto; min-height: 229px;\">";
											  box += "</div>";
											  box += "<div class=\"series-body\">";
						  	                  box +=    "<h3 class=\"text-color\">"+ sermon_series.Name +"</h3>";
											  box +=    "<hr />";
											  box +=   	"<p class=\"series-summary text-color\">"+ sermon_series.Description +"</p>";
											  box +=    "<hr />";
											  box +=   	"<p class=\"series-dates text-color text-right\">"+ sermon_series.Sermons[(sermonsInSeries-1)].Date +"</p>";
						  	                  box += "</div>";
						  	              return box;
						  	            })
						  			)
								);

					  $grid.isotope()
		  				  .append( $elem )
		  				  .isotope( 'appended', $elem )
		  				  .isotope('layout');
				});

				// Re-Initialize Isotope
			    var $grid = $('.isotope_wrap').isotope({
			        // options
			        percentPosition: true,
			        itemSelector: '.isotope_item',
			        layoutMode: 'fitRows'
			    });

				sermonOffset += 1;
				$("#loading-animation").hide();
				sermonsLoading = false; // reset back to false to allow more requests

				console.log('data.Series.length === '+data.Series.length);
				if (data.Series.length == 0) {
					sermonsContinueMakingRequests = false;
				}
			}

		});
	}
}

$(document).ready(function() {
    // Re-Initialize Isotope
    var $grid = $('.isotope_wrap').isotope({
        // options
        percentPosition: true,
        itemSelector: '.isotope_item',
        layoutMode: 'fitRows'
    });

    // reveal all items after init
    var $items = $grid.find('.isotope_item');
    $grid.imagesLoaded().progress( function() {
      $grid.removeClass('hide-on-load').addClass('is-showing-items').isotope('layout');
    });
    $grid.isotope( 'revealItemElements', $items );

    // re-init jarallax
    jarallax(document.querySelectorAll('.jarallax'), {
        disableParallax: /iPad|iPhone|iPod|Android/,
        disableVideo: /iPad|iPhone|iPod|Android/
    });
});
</script>
