{% comment %}
    ******* Filtering System for Calendar *****
{% endcomment %}

<div class="container">
    <div class="row">
        <div class="col-xs-12 col-sm-12 col-md-12" >
            <div class="filterbox">

                <div class="row">
                    <div class="col-xs-12">
                        <h3>Whatâ€™s your next step?</h3>
                        <p>Find a group or event that interests you by selecting a campus and/or ministry below. Click on the image to see more details or to register.</p>
                        <br />
                    </div>
                </div>

                <div class="row">
                    <div class="col-xs-12 col-md-6 col-lg-6" >
                        <br />
                        <h4 class="uppercase">Events From</h4>
                        <select class="select2-campuses" name="campus">
                        <option value="allMinistries">All Campuses</option>

                        {% for campus in Campuses %}
                        	{% assign publicCampus = campus | Attribute:'Public' %}
                        	{% assign slug = campus | Attribute:'Slug' %}
                        	{% if publicCampus == 'Yes' %}
                                <option value="{{ campus.Id }}">{{ campus.Name }}</option>
                        	{% endif %}
                        {% endfor %}

                        </select>
                    </div>

                    <div class="col-xs-12 col-md-6 col-lg-6" >
                        <br />
                        <h4 class="uppercase">Select a Ministry</h4>
                        <select class="select2-ministries" name="minitry">
                        <option value="allMinistries">All Ministries</option>

                        {% definedvalue where:'DefinedTypeId==16' %}
                            {% assign definedvalueItemsSorted = definedvalueItems | Sort: 'Order' %}
                            {% for definedValue in definedvalueItemsSorted %}
                                {% assign publicFilter = definedValue | Attribute:'PublicFilter' %}
                                {% if publicFilter == "Yes" %}
                                <option value="{{ definedValue.Id }}">{{ definedValue.Value | Capitalize }}</option>
                                {% endif %}
                            {% endfor %}
                        {% enddefinedvalue %}

                        </select>
                    </div>
                </div>

                <div class="row">
                    <div class="col-xs-12">
                        <br />
                        <hr />
                    </div>
                </div>

                <div id="campus_selected" class="row" style="display: none;">
                    <div class="col-xs-12">
                        <br />
                        <h2 class="section-header">
                            <span></span>
                        </h2>
                    </div>
                </div>

                <div id="ministry_selected" class="row" style="display: none;">
                    <div class="col-xs-12">
                        <br />
                        <h3 class="ministry"></h3>
                    </div>
                </div>

            </div>
        </div>
    </div>
</div>

<script>
// In your Javascript (external .js resource or <script> tag)
$(document).ready(function() {
    $('.select2-campuses').select2();
    $('.select2-campuses').on('select2:select', function (e) {
        // prevent from submiting default form action
        e.preventDefault();
        // pull in lava ID
        var data = e.params.data;
        runCampusFilters(data);
    });
    $('.select2-ministries').select2();

    // Re-Initialize Isotope
    var $grid = $('.isotope_wrap').isotope({
        // options
        percentPosition: true,
        itemSelector: '.isotope_item',
        layoutMode: 'fitRows'
    });

    // reveal all items after init
    var $items = $grid.find('.isotope_item');
    $grid.imagesLoaded().progress( function() {
      $grid.addClass('is-showing-items').isotope('layout');
    });
    $grid.isotope( 'revealItemElements', $items );

    jarallax(document.querySelectorAll('.jarallax'), {
        disableParallax: /iPad|iPhone|iPod|Android/,
        disableVideo: /iPad|iPhone|iPod|Android/
    });
});

window.onpopstate = function(event) {
  // back to the same page without the filters
  window.location.replace(window.location.protocol + "//" + window.location.host + window.location.pathname);

  // OPTIONAL - back to previous filter/result
  // var url_string = window.location.href;
  // var url = new URL(url_string);
  // var c = url.searchParams.get("campusID");
  // // console.log(c);
  // runCampusFilters(c);
};

function runCampusFilters(campus_selected) {
    // grab id to filter results
    var pnlContent = $('#event-results').find("div[id*='_upnlContent']");
    var pnlContent_ID = pnlContent.attr("id");
    pnlContent.slideUp();

    // push a new URL state with filter parameter
    var newurl = window.location.protocol + "//" + window.location.host + window.location.pathname + '?campusID=' + campus_selected.id;
    window.history.pushState({ path: newurl }, '', newurl);

    // update form action url
    $('#form1').attr('action', window.location.pathname + '?campusID=' + campus_selected.id);

    // do AJAX postback through .NET
    __doPostBack(pnlContent_ID, '');

    // console.log(data);
    $('#campus_selected').find('.section-header span').html('Events @ ' + campus_selected.text);
    $('#campus_selected').fadeIn();
}

 var prm = Sys.WebForms.PageRequestManager.getInstance();
 //Raised before processing of an asynchronous postback starts and the postback request is sent to the server.
 prm.add_beginRequest(BeginRequestHandler);
 // Raised after an asynchronous postback is finished and control has been returned to the browser.
 prm.add_endRequest(pageLoad);
 // Listen for PostBack
 function pageLoad() {
     var pnlContent = $('#event-results').find("div[id*='_upnlContent']");
     var pnlContent_ID = pnlContent.attr("id");
     pnlContent.slideDown();
     // Once loaded, fire the Javascript function from the list
     InitLoadedRequest(); // an Ajax pageLoad method that will call your jquery method
 }

 // Run JS while waiting on PostBack
 function BeginRequestHandler(sender, args) {
     // hide current state
     // hide Blocks that aren't needed when filtered
     $('.hide-on-filter').slideUp();
     // destropy any previous iso before postback
     // $('.isotope_wrap').isotope('destroy');
 }

</script>
