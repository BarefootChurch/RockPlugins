/* 
 * Push API
 *
 * No description provided (generated by Swagger Codegen https://github.com/swagger-api/swagger-codegen)
 *
 * OpenAPI spec version: 1.0.0
 * Contact: api@subsplash.com
 * Generated by: https://github.com/swagger-api/swagger-codegen.git
 */
using System;
using System.Linq;
using System.IO;
using System.Text;
using System.Text.RegularExpressions;
using System.Collections;
using System.Collections.Generic;
using System.Collections.ObjectModel;
using System.Runtime.Serialization;
using Newtonsoft.Json;
using Newtonsoft.Json.Converters;
using System.ComponentModel.DataAnnotations;

namespace com.subsplash.Model
{
    /// <summary>
    /// TopicSubscription is a representation of a subscription between a user&#x27;s PlatformEndpoint and a Topic.  In this case, a user&#x27;s PlatformEndpoint(s) are derived from ExternalUser information. 
    /// </summary>
    [DataContract]
        public partial class TopicSubscriptionBulk :  IEquatable<TopicSubscriptionBulk>, IValidatableObject
    {
        /// <summary>
        /// Initializes a new instance of the <see cref="TopicSubscriptionBulk" /> class.
        /// </summary>
        /// <param name="id">Unique identifier of topic subscription object..</param>
        /// <param name="appKey">Six character app code..</param>
        /// <param name="createdAt">Moment when the topic subscription was created..</param>
        /// <param name="updatedAt">Moment when the topic subscription was updated..</param>
        /// <param name="deletedAt">Moment when the topic subscription was deleted..</param>
        /// <param name="awsSnsSubscriptionArn">The aws sns subscription arn..</param>
        /// <param name="links">links.</param>
        /// <param name="embedded">embedded.</param>
        public TopicSubscriptionBulk(Guid? id = default(Guid?), string appKey = default(string), DateTime? createdAt = default(DateTime?), DateTime? updatedAt = default(DateTime?), DateTime? deletedAt = default(DateTime?), string awsSnsSubscriptionArn = default(string), SelfLink links = default(SelfLink), TopicSubscriptionBulkEmbedded embedded = default(TopicSubscriptionBulkEmbedded))
        {
            this.Id = id;
            this.AppKey = appKey;
            this.CreatedAt = createdAt;
            this.UpdatedAt = updatedAt;
            this.DeletedAt = deletedAt;
            this.AwsSnsSubscriptionArn = awsSnsSubscriptionArn;
            this.Links = links;
            this.Embedded = embedded;
        }
        
        /// <summary>
        /// Unique identifier of topic subscription object.
        /// </summary>
        /// <value>Unique identifier of topic subscription object.</value>
        [DataMember(Name="id", EmitDefaultValue=false)]
        public Guid? Id { get; set; }

        /// <summary>
        /// Six character app code.
        /// </summary>
        /// <value>Six character app code.</value>
        [DataMember(Name="app_key", EmitDefaultValue=false)]
        public string AppKey { get; set; }

        /// <summary>
        /// Moment when the topic subscription was created.
        /// </summary>
        /// <value>Moment when the topic subscription was created.</value>
        [DataMember(Name="created_at", EmitDefaultValue=false)]
        public DateTime? CreatedAt { get; set; }

        /// <summary>
        /// Moment when the topic subscription was updated.
        /// </summary>
        /// <value>Moment when the topic subscription was updated.</value>
        [DataMember(Name="updated_at", EmitDefaultValue=false)]
        public DateTime? UpdatedAt { get; set; }

        /// <summary>
        /// Moment when the topic subscription was deleted.
        /// </summary>
        /// <value>Moment when the topic subscription was deleted.</value>
        [DataMember(Name="deleted_at", EmitDefaultValue=false)]
        public DateTime? DeletedAt { get; set; }

        /// <summary>
        /// The aws sns subscription arn.
        /// </summary>
        /// <value>The aws sns subscription arn.</value>
        [DataMember(Name="aws_sns_subscription_arn", EmitDefaultValue=false)]
        public string AwsSnsSubscriptionArn { get; set; }

        /// <summary>
        /// Gets or Sets Links
        /// </summary>
        [DataMember(Name="_links", EmitDefaultValue=false)]
        public SelfLink Links { get; set; }

        /// <summary>
        /// Gets or Sets Embedded
        /// </summary>
        [DataMember(Name="_embedded", EmitDefaultValue=false)]
        public TopicSubscriptionBulkEmbedded Embedded { get; set; }

        /// <summary>
        /// Returns the string presentation of the object
        /// </summary>
        /// <returns>String presentation of the object</returns>
        public override string ToString()
        {
            var sb = new StringBuilder();
            sb.Append("class TopicSubscriptionBulk {\n");
            sb.Append("  Id: ").Append(Id).Append("\n");
            sb.Append("  AppKey: ").Append(AppKey).Append("\n");
            sb.Append("  CreatedAt: ").Append(CreatedAt).Append("\n");
            sb.Append("  UpdatedAt: ").Append(UpdatedAt).Append("\n");
            sb.Append("  DeletedAt: ").Append(DeletedAt).Append("\n");
            sb.Append("  AwsSnsSubscriptionArn: ").Append(AwsSnsSubscriptionArn).Append("\n");
            sb.Append("  Links: ").Append(Links).Append("\n");
            sb.Append("  Embedded: ").Append(Embedded).Append("\n");
            sb.Append("}\n");
            return sb.ToString();
        }
  
        /// <summary>
        /// Returns the JSON string presentation of the object
        /// </summary>
        /// <returns>JSON string presentation of the object</returns>
        public virtual string ToJson()
        {
            return JsonConvert.SerializeObject(this, Formatting.Indented);
        }

        /// <summary>
        /// Returns true if objects are equal
        /// </summary>
        /// <param name="input">Object to be compared</param>
        /// <returns>Boolean</returns>
        public override bool Equals(object input)
        {
            return this.Equals(input as TopicSubscriptionBulk);
        }

        /// <summary>
        /// Returns true if TopicSubscriptionBulk instances are equal
        /// </summary>
        /// <param name="input">Instance of TopicSubscriptionBulk to be compared</param>
        /// <returns>Boolean</returns>
        public bool Equals(TopicSubscriptionBulk input)
        {
            if (input == null)
                return false;

            return 
                (
                    this.Id == input.Id ||
                    (this.Id != null &&
                    this.Id.Equals(input.Id))
                ) && 
                (
                    this.AppKey == input.AppKey ||
                    (this.AppKey != null &&
                    this.AppKey.Equals(input.AppKey))
                ) && 
                (
                    this.CreatedAt == input.CreatedAt ||
                    (this.CreatedAt != null &&
                    this.CreatedAt.Equals(input.CreatedAt))
                ) && 
                (
                    this.UpdatedAt == input.UpdatedAt ||
                    (this.UpdatedAt != null &&
                    this.UpdatedAt.Equals(input.UpdatedAt))
                ) && 
                (
                    this.DeletedAt == input.DeletedAt ||
                    (this.DeletedAt != null &&
                    this.DeletedAt.Equals(input.DeletedAt))
                ) && 
                (
                    this.AwsSnsSubscriptionArn == input.AwsSnsSubscriptionArn ||
                    (this.AwsSnsSubscriptionArn != null &&
                    this.AwsSnsSubscriptionArn.Equals(input.AwsSnsSubscriptionArn))
                ) && 
                (
                    this.Links == input.Links ||
                    (this.Links != null &&
                    this.Links.Equals(input.Links))
                ) && 
                (
                    this.Embedded == input.Embedded ||
                    (this.Embedded != null &&
                    this.Embedded.Equals(input.Embedded))
                );
        }

        /// <summary>
        /// Gets the hash code
        /// </summary>
        /// <returns>Hash code</returns>
        public override int GetHashCode()
        {
            unchecked // Overflow is fine, just wrap
            {
                int hashCode = 41;
                if (this.Id != null)
                    hashCode = hashCode * 59 + this.Id.GetHashCode();
                if (this.AppKey != null)
                    hashCode = hashCode * 59 + this.AppKey.GetHashCode();
                if (this.CreatedAt != null)
                    hashCode = hashCode * 59 + this.CreatedAt.GetHashCode();
                if (this.UpdatedAt != null)
                    hashCode = hashCode * 59 + this.UpdatedAt.GetHashCode();
                if (this.DeletedAt != null)
                    hashCode = hashCode * 59 + this.DeletedAt.GetHashCode();
                if (this.AwsSnsSubscriptionArn != null)
                    hashCode = hashCode * 59 + this.AwsSnsSubscriptionArn.GetHashCode();
                if (this.Links != null)
                    hashCode = hashCode * 59 + this.Links.GetHashCode();
                if (this.Embedded != null)
                    hashCode = hashCode * 59 + this.Embedded.GetHashCode();
                return hashCode;
            }
        }

        /// <summary>
        /// To validate all properties of the instance
        /// </summary>
        /// <param name="validationContext">Validation context</param>
        /// <returns>Validation Result</returns>
        IEnumerable<System.ComponentModel.DataAnnotations.ValidationResult> IValidatableObject.Validate(ValidationContext validationContext)
        {
            yield break;
        }
    }
}
